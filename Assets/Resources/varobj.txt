GameObject = UnityEngine.GameObject

function main()

	-- List<>,Dictionay<> not exported
	-- so return as LuaVarObject
	-- varobj access via reflection, try to avoid using not exported class

	local obj = HelloWorld()

	local list = obj:getList()
	print(list.Count) -- call var's property
	
	for i=3,10 do
		list:Add(GameObject(tostring(i)))
	end

	list[5] = GameObject("Replaced 5")

	-- list index based 0 not 1
	for i=0,9 do
		print(i,list[i],list[i].name) -- access item by index
	end



	print("List count",list.Count) -- call var's property



	local dict = obj:foo()

	for i=1,10 do
		dict:Add(tostring(i),GameObject("dict"..i)) -- add k,v to Dictionary<string,GameObject>
	end
	dict["hello"] = GameObject("world")

	print("Dict count",dict.Count)

	-- now we simple benchmark varobj
	local t = os.clock()
	for i=1,200000 do
		local a = dict.Count
	end
	print("Var obj prop get 200k, take time:",os.clock()-t)
	-- you see, varobj is slow, use exported class instead
end